{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2024-07-17T00:48:42.206Z",
    "end": "2024-07-17T00:48:43.169Z",
    "duration": 963,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e34e454c-21d9-43cb-993f-7813e7fc43fc",
      "title": "",
      "fullFile": "cypress\\e2e\\customer_login.spec.js",
      "file": "cypress\\e2e\\customer_login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5541aeb8-c4a3-4d07-8d16-faecf5486ff2",
          "title": "Customer Login API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TS-01: Login with the correct customer credentials",
              "fullTitle": "Customer Login API Test TS-01: Login with the correct customer credentials",
              "timedOut": null,
              "duration": 472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: loginUrl,\n  body: customerCredentials,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.data).to.have.property(\"token\");\n  authToken = response.body.data.token; // Store the token for subsequent requests\n});",
              "err": {
                "message": "AssertionError: expected 422 to equal 200",
                "estack": "AssertionError: expected 422 to equal 200\n    at Context.eval (webpack:///./cypress/e2e/customer_login.spec.js:15:35)",
                "diff": "- 422\n+ 200\n"
              },
              "uuid": "46427b25-f9fc-4012-aeb7-e0aa73b37f58",
              "parentUUID": "5541aeb8-c4a3-4d07-8d16-faecf5486ff2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TS-02: Incorrect customer Password",
              "fullTitle": "Customer Login API Test TS-02: Incorrect customer Password",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: loginUrl,\n  body: {\n    email: 'ezenwathecla90@gmail.com',\n    password: 'wrongpassword'\n  },\n  failOnStatusCode: false // Allows checking error responses\n}).then(response => {\n  expect(response.status).to.equal(422); // Unauthorized status code\n  // Add assertions for error message or specific response handling\n});",
              "err": {},
              "uuid": "4c95bcb9-4785-49e1-affa-7043e2b14a3f",
              "parentUUID": "5541aeb8-c4a3-4d07-8d16-faecf5486ff2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TS-03: Empty customer Email Field",
              "fullTitle": "Customer Login API Test TS-03: Empty customer Email Field",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: loginUrl,\n  body: {\n    password: 'password123'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(422); // Bad request status code\n  // Add assertions for error message or specific response handling\n});",
              "err": {},
              "uuid": "1cf0b7a9-bd02-4056-8b60-3f2d283c5824",
              "parentUUID": "5541aeb8-c4a3-4d07-8d16-faecf5486ff2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c95bcb9-4785-49e1-affa-7043e2b14a3f",
            "1cf0b7a9-bd02-4056-8b60-3f2d283c5824"
          ],
          "failures": [
            "46427b25-f9fc-4012-aeb7-e0aa73b37f58"
          ],
          "pending": [],
          "skipped": [],
          "duration": 892,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}